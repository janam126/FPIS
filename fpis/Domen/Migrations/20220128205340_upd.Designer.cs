// <auto-generated />
using System;
using Domen;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Domen.Migrations
{
    [DbContext(typeof(RestoranContext))]
    [Migration("20220128205340_upd")]
    partial class upd
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domen.Entities.IzvestajOBrojuDorucaka", b =>
                {
                    b.Property<int>("RBIzvestaja")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumDO")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatumOD")
                        .HasColumnType("datetime2");

                    b.Property<int>("RestoranID")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UkupanBrojDorucaka")
                        .HasColumnType("int");

                    b.Property<int>("ZaposleniID")
                        .HasColumnType("int");

                    b.HasKey("RBIzvestaja");

                    b.HasIndex("RestoranID");

                    b.HasIndex("ZaposleniID");

                    b.ToTable("IzvestajOBrojuDorucaka");
                });

            modelBuilder.Entity("Domen.Entities.JedinicaMere", b =>
                {
                    b.Property<int>("SifraJM")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NazivJM")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SifraJM");

                    b.ToTable("JediniceMere");
                });

            modelBuilder.Entity("Domen.Entities.Restoran", b =>
                {
                    b.Property<int>("RestoranID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NazivRestorana")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RestoranID");

                    b.ToTable("Restoran");
                });

            modelBuilder.Entity("Domen.Entities.StavkaIzvestaja", b =>
                {
                    b.Property<int>("RBStavke")
                        .HasColumnType("int");

                    b.Property<int>("IzvestajOBrojuDorucakaID")
                        .HasColumnType("int");

                    b.Property<int>("BrojDorucaka")
                        .HasColumnType("int");

                    b.Property<string>("Dan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime2");

                    b.HasKey("RBStavke", "IzvestajOBrojuDorucakaID");

                    b.HasIndex("IzvestajOBrojuDorucakaID");

                    b.ToTable("StavkaIzvestaja");
                });

            modelBuilder.Entity("Domen.Entities.Usluga", b =>
                {
                    b.Property<int>("UslugaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("JedinicaMereSifraJM")
                        .HasColumnType("int");

                    b.Property<string>("NazivUsluge")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OpisUsluge")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UslugaID");

                    b.HasIndex("JedinicaMereSifraJM");

                    b.ToTable("Usluge");
                });

            modelBuilder.Entity("Domen.Entities.Zaposleni", b =>
                {
                    b.Property<int>("ZaposleniID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ZaposleniID");

                    b.ToTable("Zaposleni");
                });

            modelBuilder.Entity("Domen.Entities.IzvestajOBrojuDorucaka", b =>
                {
                    b.HasOne("Domen.Entities.Restoran", "Restoran")
                        .WithMany("Izvestaji")
                        .HasForeignKey("RestoranID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domen.Entities.Zaposleni", "Zaposleni")
                        .WithMany("Izvestaji")
                        .HasForeignKey("ZaposleniID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restoran");

                    b.Navigation("Zaposleni");
                });

            modelBuilder.Entity("Domen.Entities.StavkaIzvestaja", b =>
                {
                    b.HasOne("Domen.Entities.IzvestajOBrojuDorucaka", "IzvestajOBrojuDorucaka")
                        .WithMany("StavkeIzvestaja")
                        .HasForeignKey("IzvestajOBrojuDorucakaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IzvestajOBrojuDorucaka");
                });

            modelBuilder.Entity("Domen.Entities.Usluga", b =>
                {
                    b.HasOne("Domen.Entities.JedinicaMere", "JedinicaMere")
                        .WithMany("Usluge")
                        .HasForeignKey("JedinicaMereSifraJM");

                    b.Navigation("JedinicaMere");
                });

            modelBuilder.Entity("Domen.Entities.IzvestajOBrojuDorucaka", b =>
                {
                    b.Navigation("StavkeIzvestaja");
                });

            modelBuilder.Entity("Domen.Entities.JedinicaMere", b =>
                {
                    b.Navigation("Usluge");
                });

            modelBuilder.Entity("Domen.Entities.Restoran", b =>
                {
                    b.Navigation("Izvestaji");
                });

            modelBuilder.Entity("Domen.Entities.Zaposleni", b =>
                {
                    b.Navigation("Izvestaji");
                });
#pragma warning restore 612, 618
        }
    }
}
